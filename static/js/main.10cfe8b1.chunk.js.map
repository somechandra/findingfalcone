{"version":3,"sources":["space-shuttle.png","api/api.js","components/header/header.component.jsx","components/destination/destination.component.jsx","components/destination-directory/destination-directory.component.jsx","components/planet-controls/planet-controls.component.jsx","components/home/home.component.jsx","components/success-page/success-page.component.jsx","components/failure-page/failure-page.component.jsx","components/error-page/error-page.component.jsx","components/start-again/start-again.component.jsx","components/footer/footer.component.jsx","utils.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","apiCall","link","optObj","fetch","then","response","json","Header","Fragment","Navbar","className","Brand","href","alt","src","logo","width","height","style","marginTop","Destination","id","options","selectOption","handleChangeSelect","vehicles","handleChangeVehicleRadio","Card","Body","value","onChange","Form","Group","as","Row","Col","sm","map","vehicle","disabled","total_no","Check","key","name","replace","toLowerCase","type","custom","label","Math","floor","random","DestinationDirectory","selectOptionFirst","selectOptionSecond","selectOptionThird","selectOptionFourth","handleChangeFirstSelect","handleChangeSecondSelect","handleChangeThirdSelect","handleChangeFourthSelect","handleChangeVehicleRadioFirst","handleChangeVehicleRadioSecond","handleChangeVehicleRadioThird","handleChangeVehicleRadioFourth","PlanetControls","timeTaken","handleFindFalconeClick","isDisplayFindFalconeBtn","Button","variant","onClick","Home","planets","firstDestination","secondDestination","thirdDestination","fourthDestination","SuccessPage","planetName","FailurePage","failedMsg","ErrorPage","error","StartAgain","btnName","handleOnClick","Footer","URL_PLANETS","URL_VEHICLES","URL_TOKEN","URL_POST_REQUEST","App","props","updateVehiclesRecord","records","setState","updatePlanets","record","distance","updateToken","method","headers","Accept","handleChange","e","stateKey","isEmptyObject","state","falcone","updateTimeTaken","firstRadioSelect","vehicleName","speed","destinationNames","updateVehicles","secondRadioSelect","thirdRadioSelect","fourthRadioSelect","destinationName","dest","updatedVehicles","firstDest","secondDest","thirdDest","fourthDest","falconeArray","Object","values","planetsName","obj","vehiclesName","requestBody","token","planet_names","vehicle_names","body","JSON","stringify","result","history","push","handleStartAgain","entries","length","constructor","this","exact","path","render","status","planet_name","React","Component","withRouter","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,2C,8bCA9BC,EAAU,SAACC,EAAMC,GAAP,OACrBC,MAAMF,EAAMC,GAAQE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,W,yBCuBjCC,G,MAlBA,kBACb,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CAAQC,UAAU,UAChB,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,SACjB,yBACEC,IAAI,OACJC,IAAKC,IACLC,MAAM,KACNC,OAAO,KACPP,UAAU,6BACT,IACH,0BAAMA,UAAU,eAAhB,sBAGJ,wBAAIQ,MAAO,CAAEC,UAAW,Q,wCC0CbC,G,MAxDK,SAAC,GAOd,IANLC,EAMI,EANJA,GACAC,EAKI,EALJA,QACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,SACAC,EACI,EADJA,yBAEA,OACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,kBAAC,IAAD,CACEC,MAAON,EACPD,QAASA,EACTQ,SAAUN,KAGbD,EACC,kBAACQ,EAAA,EAAD,KACE,kCACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,GAAIC,KACd,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACNX,EAASY,KAAI,SAAAC,GACZ,IAAMC,EAAgC,IAArBD,EAAQE,SACzB,OACE,kBAACT,EAAA,EAAKU,MAAN,CACEC,IAAKrB,EAAKiB,EAAQK,KAAKC,QAAQ,MAAO,IAAIC,cAC1CC,KAAK,QACLC,QAAM,EACNR,SAAUA,EACVS,MAAOV,EAAQK,KAAO,KAAOL,EAAQE,SAAW,IAChDG,KAAMtB,EAAK,uBACXA,GACE4B,KAAKC,MAAM,IAA4B,IAAhBD,KAAKE,UAC5Bb,EAAQK,KAAKC,QAAQ,MAAO,IAAIC,cAChC,wBAEFf,SAAU,kBACRJ,EACEY,EAAQK,KACRL,EACAf,aAUhB,QCCK6B,G,MApDc,SAAC,GAAD,IAC3B9B,EAD2B,EAC3BA,QACAG,EAF2B,EAE3BA,SACA4B,EAH2B,EAG3BA,kBACAC,EAJ2B,EAI3BA,mBACAC,EAL2B,EAK3BA,kBACAC,EAN2B,EAM3BA,mBACAC,EAP2B,EAO3BA,wBACAC,EAR2B,EAQ3BA,yBACAC,EAT2B,EAS3BA,wBACAC,EAV2B,EAU3BA,yBACAC,EAX2B,EAW3BA,8BACAC,EAZ2B,EAY3BA,+BACAC,EAb2B,EAa3BA,8BACAC,EAd2B,EAc3BA,+BAd2B,OAgB3B,yBAAKtD,UAAU,wBACb,kBAAC,EAAD,CACEW,GAAG,mBACHC,QAASA,EACTC,aAAc8B,EACd7B,mBAAoBiC,EACpBhC,SAAUA,EACVC,yBAA0BmC,IAE5B,kBAAC,EAAD,CACExC,GAAG,oBACHC,QAASA,EACTC,aAAc+B,EACd9B,mBAAoBkC,EACpBjC,SAAUA,EACVC,yBAA0BoC,IAE5B,kBAAC,EAAD,CACEzC,GAAG,oBACHC,QAASA,EACTC,aAAcgC,EACd/B,mBAAoBmC,EACpBlC,SAAUA,EACVC,yBAA0BqC,IAE5B,kBAAC,EAAD,CACE1C,GAAG,oBACHC,QAASA,EACTC,aAAciC,EACdhC,mBAAoBoC,EACpBnC,SAAUA,EACVC,yBAA0BsC,O,QC/BjBC,G,MAjBQ,SAAC,GAAD,IACrBC,EADqB,EACrBA,UACAC,EAFqB,EAErBA,uBACAC,EAHqB,EAGrBA,wBAHqB,OAKrB,yBAAK1D,UAAU,iBACb,yBAAKA,UAAU,sBAAf,eAAiDwD,GAChDE,EACC,6BACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASJ,GAAnC,kBAIA,QCmCOK,G,MA9CF,SAAC,GAkBP,IAjBLC,EAiBI,EAjBJA,QACAhD,EAgBI,EAhBJA,SACAiD,EAeI,EAfJA,iBACAC,EAcI,EAdJA,kBACAC,EAaI,EAbJA,iBACAC,EAYI,EAZJA,kBACApB,EAWI,EAXJA,wBACAC,EAUI,EAVJA,yBACAC,EASI,EATJA,wBACAC,EAQI,EARJA,yBACAM,EAOI,EAPJA,UACAE,EAMI,EANJA,wBACAD,EAKI,EALJA,uBACAN,EAII,EAJJA,8BACAC,EAGI,EAHJA,+BACAC,EAEI,EAFJA,8BACAC,EACI,EADJA,+BAEA,OACE,yBAAKtD,UAAU,QACb,kBAAC,EAAD,CACEY,QAASmD,EACTpB,kBAAmBqB,EACnBpB,mBAAoBqB,EACpBpB,kBAAmBqB,EACnBpB,mBAAoBqB,EACpBpB,wBAAyBA,EACzBC,yBAA0BA,EAC1BC,wBAAyBA,EACzBC,yBAA0BA,EAC1BnC,SAAUA,EACVoC,8BAA+BA,EAC/BC,+BAAgCA,EAChCC,8BAA+BA,EAC/BC,+BAAgCA,IAElC,kBAAC,EAAD,CACEE,UAAWA,EACXE,wBAAyBA,EACzBD,uBAAwBA,OC9BjBW,G,MAbK,SAAC,GAA+B,IAA7BZ,EAA4B,EAA5BA,UAAWa,EAAiB,EAAjBA,WAChC,OACE,yBAAKrE,UAAU,eACb,yBAAKA,UAAU,6BAAf,6EAIA,yBAAKA,UAAU,WAAf,eAAsCwD,GACtC,yBAAKxD,UAAU,WAAf,iBAAwCqE,MCC/BC,G,MATK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACrB,OACE,yBAAKvE,UAAU,eACb,yBAAKA,UAAW,2BAAhB,WACA,yBAAKA,UAAW,UAAWuE,MCKlBC,G,MATG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,yBAAKzE,UAAU,aACb,yBAAKA,UAAU,SAAf,WACA,yBAAKA,UAAU,SAASyE,MCSfC,G,MAZI,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAC7B,OACE,yBAAK5E,UAAU,cACb,6BACE,kBAAC2D,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASe,GAChCD,OCAIE,G,MANA,kBACb,4BAAQ7E,UAAU,UAChB,kDCNS8E,EAAc,4CACdC,EAAe,6CACfC,EAAY,0CACZC,EAAmB,yCCkB1BC,G,kBACJ,WAAYC,GAAQ,IAAD,kCACjB,4CAAMA,KAiCRC,qBAAuB,WACrB9F,EAAQyF,GAAcrF,MAAK,SAAA2F,GAAO,OAAI,EAAKC,SAAS,CAAEvE,SAAUsE,QAnC/C,EAsCnBE,cAAgB,WACdjG,EAAQwF,GAAapF,MAAK,SAAA2F,GACxB,IAAMzE,EAAUyE,EAAQ1D,KAAI,SAAA6D,GAAM,MAAK,CACrCrE,MAAOqE,EAAOvD,KAAKE,cACnBG,MAAOkD,EAAOvD,KACdwD,SAAUD,EAAOC,SACjB7D,QAAS,OAEX,EAAK0D,SAAS,CAAEvB,QAASnD,QA9CV,EAkDnB8E,YAAc,WACZpG,EAAQ0F,EAAW,CACjBW,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAEjBnG,MAAK,SAAA2F,GAAO,OAAI,EAAKC,SAASD,OAzDhB,EA4DnBS,aAAe,SAACC,EAAGC,GACjB,EAAKV,SAAL,eAAiBU,EAAWD,IAC5B,IAAM1B,EAAa0B,EAAEzD,MAElB,EAAK2D,cAAc,EAAKC,MAAMC,QAAQH,KACvC,EAAKE,MAAMC,QAAQH,GAAU3B,aAAeA,GAE5C,EAAKiB,SACH,CACEa,QAAQ,eACH,EAAKD,MAAMC,QADT,eAEJH,EAFI,eAGA,EAAKE,MAAMC,QAAQH,GAHnB,CAIH3B,WAAYA,QAIlB,WACE,EAAK+B,sBA9EM,EAoFnBjD,8BAAgC,SAAClB,EAAML,EAASf,GAC9C,IAAIwF,EAAmB,CACrBhC,WAAYxD,EAAayB,MACzBgE,YAAa1E,EAAQK,KACrBuB,UAAW3C,EAAa4E,SAAW7D,EAAQ2E,OAG7C,EAAKjB,SACH,CACEa,QAAQ,eACH,EAAKD,MAAMC,QADT,eAEJ,EAAKK,iBAAiBxC,iBAAmBqC,MAG9C,kBAAM,EAAKD,qBAEb,EAAKK,eAAe,EAAKD,iBAAiBxC,iBAAkB/B,IApG3C,EAuGnBmB,+BAAiC,SAACnB,EAAML,EAASf,GAC/C,IAAI6F,EAAoB,CACtBrC,WAAYxD,EAAayB,MACzBgE,YAAa1E,EAAQK,KACrBuB,UAAW3C,EAAa4E,SAAW7D,EAAQ2E,OAG7C,EAAKjB,SACH,CACEa,QAAQ,eACH,EAAKD,MAAMC,QADT,eAEJ,EAAKK,iBAAiBvC,kBAAoByC,MAG/C,kBAAM,EAAKN,qBAEb,EAAKK,eAAe,EAAKD,iBAAiBvC,kBAAmBhC,IAvH5C,EA0HnBoB,8BAAgC,SAACpB,EAAML,EAASf,GAC9C,IAAI8F,EAAmB,CACrBtC,WAAYxD,EAAayB,MACzBgE,YAAa1E,EAAQK,KACrBuB,UAAW3C,EAAa4E,SAAW7D,EAAQ2E,OAG7C,EAAKjB,SACH,CACEa,QAAQ,eACH,EAAKD,MAAMC,QADT,eAEJ,EAAKK,iBAAiBtC,iBAAmByC,MAG9C,kBAAM,EAAKP,qBAEb,EAAKK,eAAe,EAAKD,iBAAiBtC,iBAAkBjC,IA1I3C,EA6InBqB,+BAAiC,SAACrB,EAAML,EAASf,GAC/C,IAAI+F,EAAoB,CACtBvC,WAAYxD,EAAayB,MACzBgE,YAAa1E,EAAQK,KACrBuB,UAAW3C,EAAa4E,SAAW7D,EAAQ2E,OAG7C,EAAKjB,SACH,CACEa,QAAQ,eACH,EAAKD,MAAMC,QADT,eAEJ,EAAKK,iBAAiBrC,kBAAoByC,MAG/C,kBAAM,EAAKR,qBAEb,EAAKK,eAAe,EAAKD,iBAAiBrC,kBAAmBlC,IA7J5C,EAgKnBwE,eAAiB,SAACI,EAAiBP,GACjC,IAAMQ,EAAO,EAAKZ,MAAMC,QAAQU,GAC5BE,EAAkB,EAAKb,MAAMnF,SAASY,KAAI,SAAAC,GAC5C,OAAIA,EAAQK,OAAS6E,EAAKR,YACjB,eAAK1E,EAAZ,CAAqBE,SAAUF,EAAQE,SAAW,IACzCF,EAAQK,OAASqE,EACnB,eACF1E,EADL,CAEEE,SACEF,EAAQE,SAAW,EAAIF,EAAQE,SAAW,EAAIF,EAAQE,WAGnDF,KAGX,EAAK0D,SAAS,CAAEvE,SAAUgG,KA/KT,EAkLnBX,gBAAkB,WAChB,IAAMY,EAAY,EAAKd,MAAMC,QAC3B,EAAKK,iBAAiBxC,kBAElBiD,EAAa,EAAKf,MAAMC,QAC5B,EAAKK,iBAAiBvC,mBAElBiD,EAAY,EAAKhB,MAAMC,QAC3B,EAAKK,iBAAiBtC,kBAElBiD,EAAa,EAAKjB,MAAMC,QAC5B,EAAKK,iBAAiBrC,mBAEpBX,EAAY,EACX,EAAKyC,cAAce,KACtBxD,GAAawD,EAAUxD,WAEpB,EAAKyC,cAAcgB,KACtBzD,GAAayD,EAAWzD,WAErB,EAAKyC,cAAciB,KACtB1D,GAAa0D,EAAU1D,WAEpB,EAAKyC,cAAckB,KACtB3D,GAAa2D,EAAW3D,WAGvB,EAAKyC,cAAce,IACnB,EAAKf,cAAcgB,IACnB,EAAKhB,cAAciB,IACnB,EAAKjB,cAAckB,IAEpB,EAAK7B,SAAS,CAAE5B,yBAAyB,IAE3C,EAAK4B,SAAS,CAAE9B,UAAWA,KApNV,EAuNnBC,uBAAyB,WACvB,IAAM2D,EAAeC,OAAOC,OAAO,EAAKpB,MAAMC,SACxCoB,EAAcH,EAAazF,KAAI,SAAA6F,GAAG,OAAIA,EAAInD,cAC1CoD,EAAeL,EAAazF,KAAI,SAAA6F,GAAG,OAAIA,EAAIlB,eAC3CoB,EAAc,CAClBC,MAAO,EAAKzB,MAAMyB,MAClBC,aAAcL,EACdM,cAAeJ,GAEjBnI,EAAQ2F,EAAkB,CACxBU,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBiC,KAAMC,KAAKC,UAAUN,KACpBhI,MAAK,SAAA8F,GACN,EAAKF,SAAS,CAAE2C,OAAQzC,IACxB,EAAKL,MAAM+C,QAAQC,KAAK,eAzOT,EA6OnBC,iBAAmB,WAAO,IAAD,IACvB,EAAK9C,UAAL,mBACG,EAAKkB,iBAAiBxC,iBAAmB,MAD5C,cAEG,EAAKwC,iBAAiBvC,kBAAoB,MAF7C,cAGG,EAAKuC,iBAAiBtC,iBAAmB,MAH5C,cAIG,EAAKsC,iBAAiBrC,kBAAoB,MAJ7C,0BAKa,GALb,yCAM2B,GAN3B,4CAQK,EAAKqC,iBAAiBxC,iBAAmB,IAR9C,cASK,EAAKwC,iBAAiBvC,kBAAoB,IAT/C,cAUK,EAAKuC,iBAAiBtC,iBAAmB,IAV9C,cAWK,EAAKsC,iBAAiBrC,kBAAoB,IAX/C,2BAaU,MAbV,IAeA,EAAKoB,gBACL,EAAKH,uBACL,EAAKM,cACL,EAAKP,MAAM+C,QAAQC,KAAK,MAhQP,EAmQnBlC,cAAgB,SAAAuB,GAAG,OACc,IAA/BH,OAAOgB,QAAQb,GAAKc,QAAgBd,EAAIe,cAAgBlB,QAlQxD,EAAKb,iBAAmB,CACtBxC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,iBAAkB,mBAClBC,kBAAmB,qBAErB,EAAK+B,OAAL,GACEyB,MAAO,GACP5D,QAAS,KACThD,SAAU,MAHZ,cAIG,EAAKyF,iBAAiBxC,iBAAmB,MAJ5C,cAKG,EAAKwC,iBAAiBvC,kBAAoB,MAL7C,cAMG,EAAKuC,iBAAiBtC,iBAAmB,MAN5C,cAOG,EAAKsC,iBAAiBrC,kBAAoB,MAP7C,0BAQa,GARb,yCAS2B,GAT3B,4CAWK,EAAKqC,iBAAiBxC,iBAAmB,IAX9C,cAYK,EAAKwC,iBAAiBvC,kBAAoB,IAZ/C,cAaK,EAAKuC,iBAAiBtC,iBAAmB,IAb9C,cAcK,EAAKsC,iBAAiBrC,kBAAoB,IAd/C,2BAgBU,MAhBV,GARiB,E,iFA6BjBqE,KAAKjD,gBACLiD,KAAKpD,uBACLoD,KAAK9C,gB,+BAuOG,IAAD,OACP,OACE,yBAAK1F,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEyI,OAAK,EACLC,KAAK,IACLC,OAAQ,kBACN,kBAAC,EAAD,CACE5E,QAAS,EAAKmC,MAAMnC,QACpBhD,SAAU,EAAKmF,MAAMnF,SACrBiD,iBACE,EAAKkC,MAAM,EAAKM,iBAAiBxC,kBAEnCC,kBACE,EAAKiC,MAAM,EAAKM,iBAAiBvC,mBAEnCC,iBACE,EAAKgC,MAAM,EAAKM,iBAAiBtC,kBAEnCC,kBACE,EAAK+B,MAAM,EAAKM,iBAAiBrC,mBAEnCpB,wBAAyB,SAAAgD,GAAC,OACxB,EAAKD,aAAaC,EAAG,EAAKS,iBAAiBxC,mBAE7ChB,yBAA0B,SAAA+C,GAAC,OACzB,EAAKD,aAAaC,EAAG,EAAKS,iBAAiBvC,oBAE7ChB,wBAAyB,SAAA8C,GAAC,OACxB,EAAKD,aAAaC,EAAG,EAAKS,iBAAiBtC,mBAE7ChB,yBAA0B,SAAA6C,GAAC,OACzB,EAAKD,aAAaC,EAAG,EAAKS,iBAAiBrC,oBAE7CX,UAAW,EAAK0C,MAAM1C,UACtBE,wBAAyB,EAAKwC,MAAMxC,wBACpCD,uBAAwB,EAAKA,uBAC7BN,8BACE,EAAKA,8BAEPC,+BACE,EAAKA,+BAEPC,8BACE,EAAKA,8BAEPC,+BACE,EAAKA,oCAKb,kBAAC,IAAD,CACEmF,OAAK,EACLC,KAAK,UACLC,OAAQ,kBACN,EAAKzC,MAAM+B,OACoB,YAA7B,EAAK/B,MAAM+B,OAAOW,OAChB,kBAAC,EAAD,CACEpF,UAAW,EAAK0C,MAAM1C,UACtBa,WAAY,EAAK6B,MAAM+B,OAAOY,cAED,UAA7B,EAAK3C,MAAM+B,OAAOW,OACpB,kBAAC,EAAD,CAAarE,UAAU,uDAEvB,kBAAC,EAAD,CAAWE,MAAO,EAAKyB,MAAM+B,OAAOxD,QAGtC,kBAAC,EAAD,CACEE,QAAQ,cACRC,cAAe,EAAKwD,uBAM7BI,KAAKtC,MAAM+B,OACV,kBAAC,EAAD,CACEtD,QAAQ,cACRC,cAAe4D,KAAKJ,mBAEpB,KACJ,kBAAC,EAAD,W,GA3VUU,IAAMC,YAiWTC,cAAW9D,GC1WN+D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASX,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFY,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjK,MAAK,SAAAkK,GACjCA,EAAaC,kB","file":"static/js/main.10cfe8b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space-shuttle.56bda2c7.png\";","export const apiCall = (link, optObj) =>\r\n  fetch(link, optObj).then(response => response.json());\r\n","import React from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nimport logo from \"../../space-shuttle.png\";\r\nimport \"./header.styles.css\";\r\n\r\nconst Header = () => (\r\n  <React.Fragment>\r\n    <Navbar className=\"Header\">\r\n      <Navbar.Brand href=\"#home\">\r\n        <img\r\n          alt=\"logo\"\r\n          src={logo}\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top\"\r\n        />{\" \"}\r\n        <span className=\"HeaderTitle\">Finding Falcone!</span>\r\n      </Navbar.Brand>\r\n    </Navbar>\r\n    <hr style={{ marginTop: 0 }} />\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Card, Form, Row, Col } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\n\r\nimport \"./destination.styles.css\";\r\n\r\nconst Destination = ({\r\n  id,\r\n  options,\r\n  selectOption,\r\n  handleChangeSelect,\r\n  vehicles,\r\n  handleChangeVehicleRadio\r\n}) => {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Select\r\n          value={selectOption}\r\n          options={options}\r\n          onChange={handleChangeSelect}\r\n        />\r\n      </Card.Body>\r\n      {selectOption ? (\r\n        <Form>\r\n          <fieldset>\r\n            <Form.Group as={Row}>\r\n              <Col sm={10}>\r\n                {vehicles.map(vehicle => {\r\n                  const disabled = vehicle.total_no === 0;\r\n                  return (\r\n                    <Form.Check\r\n                      key={id + vehicle.name.replace(/\\s/g, \"\").toLowerCase()}\r\n                      type=\"radio\"\r\n                      custom\r\n                      disabled={disabled}\r\n                      label={vehicle.name + \" (\" + vehicle.total_no + \")\"}\r\n                      name={id + \"formHorizontalRadios\"}\r\n                      id={\r\n                        Math.floor(100000000 + Math.random() * 900000000) +\r\n                        vehicle.name.replace(/\\s/g, \"\").toLowerCase() +\r\n                        \"formHorizontalRadios1\"\r\n                      }\r\n                      onChange={() =>\r\n                        handleChangeVehicleRadio(\r\n                          vehicle.name,\r\n                          vehicle,\r\n                          selectOption\r\n                        )\r\n                      }\r\n                    />\r\n                  );\r\n                })}\r\n              </Col>\r\n            </Form.Group>\r\n          </fieldset>\r\n        </Form>\r\n      ) : null}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Destination;\r\n","import React from \"react\";\r\n\r\nimport Destination from \"../destination/destination.component\";\r\n\r\nimport \"./destination-directory.styles.css\";\r\n\r\nconst DestinationDirectory = ({\r\n  options,\r\n  vehicles,\r\n  selectOptionFirst,\r\n  selectOptionSecond,\r\n  selectOptionThird,\r\n  selectOptionFourth,\r\n  handleChangeFirstSelect,\r\n  handleChangeSecondSelect,\r\n  handleChangeThirdSelect,\r\n  handleChangeFourthSelect,\r\n  handleChangeVehicleRadioFirst,\r\n  handleChangeVehicleRadioSecond,\r\n  handleChangeVehicleRadioThird,\r\n  handleChangeVehicleRadioFourth\r\n}) => (\r\n  <div className=\"DestinationDirectory\">\r\n    <Destination\r\n      id=\"firstDestination\"\r\n      options={options}\r\n      selectOption={selectOptionFirst}\r\n      handleChangeSelect={handleChangeFirstSelect}\r\n      vehicles={vehicles}\r\n      handleChangeVehicleRadio={handleChangeVehicleRadioFirst}\r\n    />\r\n    <Destination\r\n      id=\"secondDestination\"\r\n      options={options}\r\n      selectOption={selectOptionSecond}\r\n      handleChangeSelect={handleChangeSecondSelect}\r\n      vehicles={vehicles}\r\n      handleChangeVehicleRadio={handleChangeVehicleRadioSecond}\r\n    />\r\n    <Destination\r\n      id=\"secondDestination\"\r\n      options={options}\r\n      selectOption={selectOptionThird}\r\n      handleChangeSelect={handleChangeThirdSelect}\r\n      vehicles={vehicles}\r\n      handleChangeVehicleRadio={handleChangeVehicleRadioThird}\r\n    />\r\n    <Destination\r\n      id=\"secondDestination\"\r\n      options={options}\r\n      selectOption={selectOptionFourth}\r\n      handleChangeSelect={handleChangeFourthSelect}\r\n      vehicles={vehicles}\r\n      handleChangeVehicleRadio={handleChangeVehicleRadioFourth}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default DestinationDirectory;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport \"./planet-controls.styles.css\";\r\n\r\nconst PlanetControls = ({\r\n  timeTaken,\r\n  handleFindFalconeClick,\r\n  isDisplayFindFalconeBtn\r\n}) => (\r\n  <div className=\"PanelControls\">\r\n    <div className=\"PanelControlsLabel\">Time taken: {timeTaken}</div>\r\n    {isDisplayFindFalconeBtn ? (\r\n      <div>\r\n        <Button variant=\"primary\" onClick={handleFindFalconeClick}>\r\n          Find Falcone!\r\n        </Button>\r\n      </div>\r\n    ) : null}\r\n  </div>\r\n);\r\n\r\nexport default PlanetControls;\r\n","import React from \"react\";\r\n\r\nimport DestinationDirectory from \"../destination-directory/destination-directory.component\";\r\nimport PlanetControls from \"../planet-controls/planet-controls.component\";\r\n\r\nimport \"./home.styles.css\";\r\n\r\nconst Home = ({\r\n  planets,\r\n  vehicles,\r\n  firstDestination,\r\n  secondDestination,\r\n  thirdDestination,\r\n  fourthDestination,\r\n  handleChangeFirstSelect,\r\n  handleChangeSecondSelect,\r\n  handleChangeThirdSelect,\r\n  handleChangeFourthSelect,\r\n  timeTaken,\r\n  isDisplayFindFalconeBtn,\r\n  handleFindFalconeClick,\r\n  handleChangeVehicleRadioFirst,\r\n  handleChangeVehicleRadioSecond,\r\n  handleChangeVehicleRadioThird,\r\n  handleChangeVehicleRadioFourth\r\n}) => {\r\n  return (\r\n    <div className=\"Home\">\r\n      <DestinationDirectory\r\n        options={planets}\r\n        selectOptionFirst={firstDestination}\r\n        selectOptionSecond={secondDestination}\r\n        selectOptionThird={thirdDestination}\r\n        selectOptionFourth={fourthDestination}\r\n        handleChangeFirstSelect={handleChangeFirstSelect}\r\n        handleChangeSecondSelect={handleChangeSecondSelect}\r\n        handleChangeThirdSelect={handleChangeThirdSelect}\r\n        handleChangeFourthSelect={handleChangeFourthSelect}\r\n        vehicles={vehicles}\r\n        handleChangeVehicleRadioFirst={handleChangeVehicleRadioFirst}\r\n        handleChangeVehicleRadioSecond={handleChangeVehicleRadioSecond}\r\n        handleChangeVehicleRadioThird={handleChangeVehicleRadioThird}\r\n        handleChangeVehicleRadioFourth={handleChangeVehicleRadioFourth}\r\n      />\r\n      <PlanetControls\r\n        timeTaken={timeTaken}\r\n        isDisplayFindFalconeBtn={isDisplayFindFalconeBtn}\r\n        handleFindFalconeClick={handleFindFalconeClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nimport \"./success-page.styles.css\";\r\n\r\nconst SuccessPage = ({ timeTaken, planetName }) => {\r\n  return (\r\n    <div className=\"SuccessPage\">\r\n      <div className=\"success successGreenColor\">\r\n        Success! Congratulations on Finding Falcone. King Shan is mighty\r\n        pleased.\r\n      </div>\r\n      <div className=\"success\">Time Taken: {timeTaken}</div>\r\n      <div className=\"success\">Planet Found: {planetName}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessPage;\r\n","import React from \"react\";\r\n\r\nimport \"./failure-page.styles.css\";\r\n\r\nconst FailurePage = ({ failedMsg }) => {\r\n  return (\r\n    <div className=\"FailurePage\">\r\n      <div className={\"failed failedTitleColor\"}>Failed!</div>\r\n      <div className={\"failed\"}>{failedMsg}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FailurePage;\r\n","import React from \"react\";\r\n\r\nimport \"./error-page.styles.css\";\r\n\r\nconst ErrorPage = ({ error }) => {\r\n  return (\r\n    <div className=\"ErrorPage\">\r\n      <div className=\"error\">Error!!</div>\r\n      <div className=\"error\">{error}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport \"./start-again.styles.css\";\r\n\r\nconst StartAgain = ({ btnName, handleOnClick }) => {\r\n  return (\r\n    <div className=\"StartAgain\">\r\n      <div>\r\n        <Button variant=\"primary\" onClick={handleOnClick}>\r\n          {btnName}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartAgain;\r\n","import React from \"react\";\r\n\r\nimport \"./footer.styles.css\";\r\n\r\nconst Footer = () => (\r\n  <footer className=\"Footer\">\r\n    <div>Coding Problem</div>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","export const URL_PLANETS = \"https://findfalcone.herokuapp.com/planets\";\r\nexport const URL_VEHICLES = \"https://findfalcone.herokuapp.com/vehicles\";\r\nexport const URL_TOKEN = \"https://findfalcone.herokuapp.com/token\";\r\nexport const URL_POST_REQUEST = \"https://findfalcone.herokuapp.com/find\";\r\n","import React from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\n\nimport { apiCall } from \"./api/api\";\nimport Header from \"./components/header/header.component\";\nimport Home from \"./components/home/home.component\";\nimport SuccessPage from \"./components/success-page/success-page.component\";\nimport FailurePage from \"./components/failure-page/failure-page.component\";\nimport ErrorPage from \"./components/error-page/error-page.component\";\nimport StartAgain from \"./components/start-again/start-again.component\";\nimport Footer from \"./components/footer/footer.component\";\n\nimport {\n  URL_PLANETS,\n  URL_VEHICLES,\n  URL_TOKEN,\n  URL_POST_REQUEST\n} from \"./utils\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.destinationNames = {\n      firstDestination: \"firstDestination\",\n      secondDestination: \"secondDestination\",\n      thirdDestination: \"thirdDestination\",\n      fourthDestination: \"fourthDestination\"\n    };\n    this.state = {\n      token: \"\",\n      planets: null,\n      vehicles: null,\n      [this.destinationNames.firstDestination]: null,\n      [this.destinationNames.secondDestination]: null,\n      [this.destinationNames.thirdDestination]: null,\n      [this.destinationNames.fourthDestination]: null,\n      timeTaken: 0,\n      isDisplayFindFalconeBtn: false,\n      falcone: {\n        [this.destinationNames.firstDestination]: {},\n        [this.destinationNames.secondDestination]: {},\n        [this.destinationNames.thirdDestination]: {},\n        [this.destinationNames.fourthDestination]: {}\n      },\n      result: null\n    };\n  }\n\n  componentDidMount() {\n    this.updatePlanets();\n    this.updateVehiclesRecord();\n    this.updateToken();\n  }\n\n  updateVehiclesRecord = () => {\n    apiCall(URL_VEHICLES).then(records => this.setState({ vehicles: records }));\n  };\n\n  updatePlanets = () => {\n    apiCall(URL_PLANETS).then(records => {\n      const options = records.map(record => ({\n        value: record.name.toLowerCase(),\n        label: record.name,\n        distance: record.distance,\n        vehicle: \"\"\n      }));\n      this.setState({ planets: options });\n    });\n  };\n\n  updateToken = () => {\n    apiCall(URL_TOKEN, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(records => this.setState(records));\n  };\n\n  handleChange = (e, stateKey) => {\n    this.setState({ [stateKey]: e });\n    const planetName = e.label;\n    if (\n      !this.isEmptyObject(this.state.falcone[stateKey]) &&\n      this.state.falcone[stateKey].planetName !== planetName\n    ) {\n      this.setState(\n        {\n          falcone: {\n            ...this.state.falcone,\n            [stateKey]: {\n              ...this.state.falcone[stateKey],\n              planetName: planetName\n            }\n          }\n        },\n        () => {\n          this.updateTimeTaken();\n        }\n      );\n    }\n  };\n\n  handleChangeVehicleRadioFirst = (name, vehicle, selectOption) => {\n    let firstRadioSelect = {\n      planetName: selectOption.label,\n      vehicleName: vehicle.name,\n      timeTaken: selectOption.distance / vehicle.speed\n    };\n\n    this.setState(\n      {\n        falcone: {\n          ...this.state.falcone,\n          [this.destinationNames.firstDestination]: firstRadioSelect\n        }\n      },\n      () => this.updateTimeTaken()\n    );\n    this.updateVehicles(this.destinationNames.firstDestination, name);\n  };\n\n  handleChangeVehicleRadioSecond = (name, vehicle, selectOption) => {\n    let secondRadioSelect = {\n      planetName: selectOption.label,\n      vehicleName: vehicle.name,\n      timeTaken: selectOption.distance / vehicle.speed\n    };\n\n    this.setState(\n      {\n        falcone: {\n          ...this.state.falcone,\n          [this.destinationNames.secondDestination]: secondRadioSelect\n        }\n      },\n      () => this.updateTimeTaken()\n    );\n    this.updateVehicles(this.destinationNames.secondDestination, name);\n  };\n\n  handleChangeVehicleRadioThird = (name, vehicle, selectOption) => {\n    let thirdRadioSelect = {\n      planetName: selectOption.label,\n      vehicleName: vehicle.name,\n      timeTaken: selectOption.distance / vehicle.speed\n    };\n\n    this.setState(\n      {\n        falcone: {\n          ...this.state.falcone,\n          [this.destinationNames.thirdDestination]: thirdRadioSelect\n        }\n      },\n      () => this.updateTimeTaken()\n    );\n    this.updateVehicles(this.destinationNames.thirdDestination, name);\n  };\n\n  handleChangeVehicleRadioFourth = (name, vehicle, selectOption) => {\n    let fourthRadioSelect = {\n      planetName: selectOption.label,\n      vehicleName: vehicle.name,\n      timeTaken: selectOption.distance / vehicle.speed\n    };\n\n    this.setState(\n      {\n        falcone: {\n          ...this.state.falcone,\n          [this.destinationNames.fourthDestination]: fourthRadioSelect\n        }\n      },\n      () => this.updateTimeTaken()\n    );\n    this.updateVehicles(this.destinationNames.fourthDestination, name);\n  };\n\n  updateVehicles = (destinationName, vehicleName) => {\n    const dest = this.state.falcone[destinationName];\n    let updatedVehicles = this.state.vehicles.map(vehicle => {\n      if (vehicle.name === dest.vehicleName) {\n        return { ...vehicle, total_no: vehicle.total_no + 1 };\n      } else if (vehicle.name === vehicleName) {\n        return {\n          ...vehicle,\n          total_no:\n            vehicle.total_no > 0 ? vehicle.total_no - 1 : vehicle.total_no\n        };\n      } else {\n        return vehicle;\n      }\n    });\n    this.setState({ vehicles: updatedVehicles });\n  };\n\n  updateTimeTaken = () => {\n    const firstDest = this.state.falcone[\n      this.destinationNames.firstDestination\n    ];\n    const secondDest = this.state.falcone[\n      this.destinationNames.secondDestination\n    ];\n    const thirdDest = this.state.falcone[\n      this.destinationNames.thirdDestination\n    ];\n    const fourthDest = this.state.falcone[\n      this.destinationNames.fourthDestination\n    ];\n    let timeTaken = 0;\n    if (!this.isEmptyObject(firstDest)) {\n      timeTaken += firstDest.timeTaken;\n    }\n    if (!this.isEmptyObject(secondDest)) {\n      timeTaken += secondDest.timeTaken;\n    }\n    if (!this.isEmptyObject(thirdDest)) {\n      timeTaken += thirdDest.timeTaken;\n    }\n    if (!this.isEmptyObject(fourthDest)) {\n      timeTaken += fourthDest.timeTaken;\n    }\n    if (\n      !this.isEmptyObject(firstDest) &&\n      !this.isEmptyObject(secondDest) &&\n      !this.isEmptyObject(thirdDest) &&\n      !this.isEmptyObject(fourthDest)\n    ) {\n      this.setState({ isDisplayFindFalconeBtn: true });\n    }\n    this.setState({ timeTaken: timeTaken });\n  };\n\n  handleFindFalconeClick = () => {\n    const falconeArray = Object.values(this.state.falcone);\n    const planetsName = falconeArray.map(obj => obj.planetName);\n    const vehiclesName = falconeArray.map(obj => obj.vehicleName);\n    const requestBody = {\n      token: this.state.token,\n      planet_names: planetsName,\n      vehicle_names: vehiclesName\n    };\n    apiCall(URL_POST_REQUEST, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(requestBody)\n    }).then(record => {\n      this.setState({ result: record });\n      this.props.history.push(\"/result\");\n    });\n  };\n\n  handleStartAgain = () => {\n    this.setState({\n      [this.destinationNames.firstDestination]: null,\n      [this.destinationNames.secondDestination]: null,\n      [this.destinationNames.thirdDestination]: null,\n      [this.destinationNames.fourthDestination]: null,\n      timeTaken: 0,\n      isDisplayFindFalconeBtn: false,\n      falcone: {\n        [this.destinationNames.firstDestination]: {},\n        [this.destinationNames.secondDestination]: {},\n        [this.destinationNames.thirdDestination]: {},\n        [this.destinationNames.fourthDestination]: {}\n      },\n      result: null\n    });\n    this.updatePlanets();\n    this.updateVehiclesRecord();\n    this.updateToken();\n    this.props.history.push(\"/\");\n  };\n\n  isEmptyObject = obj =>\n    Object.entries(obj).length === 0 && obj.constructor === Object;\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <Home\n                planets={this.state.planets}\n                vehicles={this.state.vehicles}\n                firstDestination={\n                  this.state[this.destinationNames.firstDestination]\n                }\n                secondDestination={\n                  this.state[this.destinationNames.secondDestination]\n                }\n                thirdDestination={\n                  this.state[this.destinationNames.thirdDestination]\n                }\n                fourthDestination={\n                  this.state[this.destinationNames.fourthDestination]\n                }\n                handleChangeFirstSelect={e =>\n                  this.handleChange(e, this.destinationNames.firstDestination)\n                }\n                handleChangeSecondSelect={e =>\n                  this.handleChange(e, this.destinationNames.secondDestination)\n                }\n                handleChangeThirdSelect={e =>\n                  this.handleChange(e, this.destinationNames.thirdDestination)\n                }\n                handleChangeFourthSelect={e =>\n                  this.handleChange(e, this.destinationNames.fourthDestination)\n                }\n                timeTaken={this.state.timeTaken}\n                isDisplayFindFalconeBtn={this.state.isDisplayFindFalconeBtn}\n                handleFindFalconeClick={this.handleFindFalconeClick}\n                handleChangeVehicleRadioFirst={\n                  this.handleChangeVehicleRadioFirst\n                }\n                handleChangeVehicleRadioSecond={\n                  this.handleChangeVehicleRadioSecond\n                }\n                handleChangeVehicleRadioThird={\n                  this.handleChangeVehicleRadioThird\n                }\n                handleChangeVehicleRadioFourth={\n                  this.handleChangeVehicleRadioFourth\n                }\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/result\"\n            render={() =>\n              this.state.result ? (\n                this.state.result.status === \"success\" ? (\n                  <SuccessPage\n                    timeTaken={this.state.timeTaken}\n                    planetName={this.state.result.planet_name}\n                  />\n                ) : this.state.result.status === \"false\" ? (\n                  <FailurePage failedMsg=\"We could not find Falcone. Let's try once again!!!\" />\n                ) : (\n                  <ErrorPage error={this.state.result.error} />\n                )\n              ) : (\n                <StartAgain\n                  btnName=\"Start Again\"\n                  handleOnClick={this.handleStartAgain}\n                />\n              )\n            }\n          />\n        </Switch>\n        {this.state.result ? (\n          <StartAgain\n            btnName=\"Start Again\"\n            handleOnClick={this.handleStartAgain}\n          />\n        ) : null}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}